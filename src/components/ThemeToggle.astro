<button id="theme-toggle" aria-label="Toggle theme">
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="icon icon-sun" aria-label="Light mode">
        <path stroke-linecap="round" stroke-linejoin="round" d="M12 3v2.25m6.364.386-1.591 1.591M21 12h-2.25m-.386 6.364-1.591-1.591M12 18.75V21m-4.773-4.227-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0Z" />
    </svg>

    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="icon icon-moon" aria-label="Dark mode">
        <path stroke-linecap="round" stroke-linejoin="round" d="M21.752 15.002A9.72 9.72 0 0 1 18 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 0 0 3 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 0 0 9.002-5.998Z" />
    </svg>

    <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 -960 960 960" class="icon icon-system" aria-label="System theme">
        <path d="M480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm40-83q119-15 199.5-104.5T800-480q0-123-80.5-212.5T520-797v634Z"/>
    </svg>

</button>

<script is:inline>
    const themeToggle = document.getElementById('theme-toggle');
    const sunIcon = themeToggle.querySelector('.icon-sun');
    const moonIcon = themeToggle.querySelector('.icon-moon');
    const systemIcon = themeToggle.querySelector('.icon-system');
    const prefersDarkScheme = window.matchMedia("(prefers-color-scheme: dark)");

    function updateIconDisplay(theme) {
        sunIcon.style.display = 'none';
        moonIcon.style.display = 'none';
        systemIcon.style.display = 'none';

        if (theme === 'system') {
            systemIcon.style.display = 'block';
        } else if (theme === 'dark') {
            moonIcon.style.display = 'block';
        } else {
            sunIcon.style.display = 'block';
        }
    }

    function setTheme(theme) {
        if (theme === 'system') {
            if (prefersDarkScheme.matches) {
                document.documentElement.setAttribute('data-theme', 'dark');
            } else {
                document.documentElement.removeAttribute('data-theme');
            }
            localStorage.removeItem('theme');
            themeToggle.setAttribute('title', 'System theme');
        } else if (theme === 'dark') {
            document.documentElement.setAttribute('data-theme', 'dark');
            themeToggle.setAttribute('title', 'Dark theme');
            localStorage.setItem('theme', theme);
        } else {
            document.documentElement.removeAttribute('data-theme');
            themeToggle.setAttribute('title', 'Light theme');
            localStorage.setItem('theme', theme);
        }
        updateIconDisplay(theme);
    }

    function getCurrentTheme() {
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme) {
            return savedTheme;
        }
        return 'system';
    }

    themeToggle.addEventListener('click', () => {
        const currentTheme = getCurrentTheme();
        switch(currentTheme) {
            case 'light':
                setTheme('dark');
                break;
            case 'dark':
                setTheme('system');
                break;
            case 'system':
            default:
                setTheme('light');
                break;
        }
    });

    // Listen for system preference changes
    prefersDarkScheme.addEventListener('change', () => {
        const currentTheme = getCurrentTheme();
        if (currentTheme === 'system') {
            setTheme('system');
        }
    });

    // Apply initial theme
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme) {
        setTheme(savedTheme);
    } else {
        setTheme('system');
    }
</script>

<style>
    #theme-toggle {
        background: none;
        border: none;
        cursor: pointer;
        padding: 0.5rem;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--primary-text);
    }

    #theme-toggle:hover,
    #theme-toggle:focus-visible {
        color: var(--color-primary);
    }
    .icon {
        width: 1em;
        height: 1em;
    }
</style>
